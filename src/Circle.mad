import type { Color } from "./Color"
import type { Window } from "./Window"
import { colorToShort } from "./Color"

type Circle = __Circle__
export type Circle



make :: Float -> Short -> Circle
export make = extern "madsfml__makeCircle"

setCircleFillColorFFI :: Short -> Circle -> Circle
setCircleFillColorFFI = extern "madsfml__setCircleFillColor"

setFillColor :: Color -> Circle -> Circle
export setFillColor = (c, circle) => pipe(
  colorToShort,
  setCircleFillColorFFI($, circle)
)(c)

setPosition :: Float -> Float -> Circle -> Circle
export setPosition = extern "madsfml__setCirclePosition"

draw :: Circle -> Window -> {}
export draw = extern "madsfml__drawCircle"
